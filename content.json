{"meta":{"title":"KR","subtitle":"随心所欲","description":"做自己想做的事","author":"umlink","url":"https://umlink.github.io","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2019-09-30T09:41:59.375Z","updated":"2019-09-30T09:41:59.374Z","comments":false,"path":"/404.html","permalink":"https://umlink.github.io/404.html","excerpt":"","text":""},{"title":"关于","date":"2021-03-24T16:06:38.393Z","updated":"2021-03-24T16:06:38.393Z","comments":false,"path":"about/index.html","permalink":"https://umlink.github.io/about/index.html","excerpt":"","text":"一个没心没肺大叔"},{"title":"书单","date":"2021-03-24T16:22:12.044Z","updated":"2021-03-24T16:22:12.044Z","comments":true,"path":"books/index.html","permalink":"https://umlink.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2021-03-24T16:21:26.954Z","updated":"2021-03-24T16:21:26.954Z","comments":false,"path":"categories/index.html","permalink":"https://umlink.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2021-03-24T16:13:58.372Z","updated":"2021-03-24T16:13:58.372Z","comments":true,"path":"links/index.html","permalink":"https://umlink.github.io/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-09-30T09:20:30.466Z","updated":"2019-09-30T09:20:30.466Z","comments":false,"path":"repository/index.html","permalink":"https://umlink.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-09-30T09:41:59.375Z","updated":"2019-09-30T09:41:59.374Z","comments":false,"path":"tags/index.html","permalink":"https://umlink.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"股票大作手回忆录","slug":"股票大作手回忆录","date":"2020-01-21T07:30:25.000Z","updated":"2021-03-24T16:23:29.227Z","comments":true,"path":"2020/01/21/股票大作手回忆录/","link":"","permalink":"https://umlink.github.io/2020/01/21/%E8%82%A1%E7%A5%A8%E5%A4%A7%E4%BD%9C%E6%89%8B%E5%9B%9E%E5%BF%86%E5%BD%95/","excerpt":"","text":"第一章 独立特行的少年赌客人 在个㢟规律性波动中赚钱 第二章 独立特行的少年赌客人 永远不要对时长生气 第三章 重返华尔街遭受重创 适应股市，而不是让股市适应你 第四章 卧薪尝胆三反华尔街 找到正确的操作方法才能赚钱 第五章 “老火鸡”的至理名言 成功的秘诀再约预判大势和百信等待 第六章 最昂贵的一课 听信别人不如相信自己 第七章 老手怀特的故事 判断何时的出手时机（稳住，涨时试探性的买入，不要一味的找低谷买入） 第八章 再次破产后的绝地反击 顺势而为，择机而动","categories":[],"tags":[{"name":"股票","slug":"股票","permalink":"https://umlink.github.io/tags/%E8%82%A1%E7%A5%A8/"}]},{"title":"小计浏览器缓存策略","slug":"cache-control","date":"2020-01-21T06:12:24.000Z","updated":"2021-03-24T16:23:29.268Z","comments":true,"path":"2020/01/21/cache-control/","link":"","permalink":"https://umlink.github.io/2020/01/21/cache-control/","excerpt":"","text":"一、强缓存 缓存未过期只取本地， 资源更新则GG。 Cache-Control public, max-age=xxx Expire 二、协商缓存 每次都请求服务器？ 替换路径？ hash 每次打包时生成的hash,不可用 chunkhash 单独chunk 的hash contenthash 内容变化时的hash 三、ETag &amp; Last-Modified Nginx官方默认的ETag计算方式是为”文件最后修改时间16进制-文件长度16进制”。例：ETag： “59e72c84-2404” Express框架使用了serve-static中间件来配置缓存方案，其中，使用了一个叫etag的npm包来实现etag计算 请求头带上了if-modified-since和if-none-match两个字段，则先判断etag，再判断last-modified","categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://umlink.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"}],"tags":[{"name":"缓存","slug":"缓存","permalink":"https://umlink.github.io/tags/%E7%BC%93%E5%AD%98/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-09-30T08:34:36.034Z","updated":"2021-03-24T16:25:12.281Z","comments":true,"path":"2019/09/30/hello-world/","link":"","permalink":"https://umlink.github.io/2019/09/30/hello-world/","excerpt":"","text":"Quick StartCreate a new post12345678910111213141516171819const newFunc = function (ctx) &#123; const obj = new Object() // 获取构造函数和入参 let [constructor, ...oArgs] = [...arguments] // 将构建函数的原型赋值给obj的__proto__ obj.__proto__ = constructor.prototype // 将构造函数的 this 指向obj const result = constructor.apply(obj, oArgs) // 如果构造函数的执行结果返回的是一个 对象 那么就返回这个对象 if (result &amp;&amp; typeof result == Object || typeof result == &#x27;function&#x27;) &#123; return result &#125; return obj&#125; 1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"javascript","slug":"javascript","permalink":"https://umlink.github.io/categories/javascript/"},{"name":"nodejs","slug":"javascript/nodejs","permalink":"https://umlink.github.io/categories/javascript/nodejs/"}],"tags":[]}],"categories":[{"name":"浏览器","slug":"浏览器","permalink":"https://umlink.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"javascript","slug":"javascript","permalink":"https://umlink.github.io/categories/javascript/"},{"name":"nodejs","slug":"javascript/nodejs","permalink":"https://umlink.github.io/categories/javascript/nodejs/"}],"tags":[{"name":"股票","slug":"股票","permalink":"https://umlink.github.io/tags/%E8%82%A1%E7%A5%A8/"},{"name":"缓存","slug":"缓存","permalink":"https://umlink.github.io/tags/%E7%BC%93%E5%AD%98/"}]}